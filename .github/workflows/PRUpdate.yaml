name: PR Update
run-name: Updating Issues on PR Close for ${{ github.base_ref }}

on:
  pull_request:
    branches:
      - develop
      - staging
    types: [closed]

jobs:
  update-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

#Fix the Repo name

      # - name: Add Develop Labels to Issues
      #   if: github.base_ref == 'develop'
      #   run: |
      #     issues=$(gh api graphql -F owner='NoroGH' -F repo='testing_repo' -F pr=${{ github.event.pull_request.number }} -f query='
      #       query ($owner: String!, $repo: String!, $pr: Int!) {
      #         repository(owner: $owner, name: $repo) {
      #           pullRequest(number: $pr) {
      #             closingIssuesReferences(first: 100) {
      #               nodes {
      #                 number
      #               }
      #             }
      #           }
      #         }
      #       }'  --jq '.data.repository.pullRequest.closingIssuesReferences.nodes[].number')

      #     if [ -z "$issues" ]; then
      #       echo "No issues found in PR body."
      #       exit 0
      #     fi

      #     for issue in $issues; do
      #       gh issue edit $issue --add-label ${GITHUB_BASE_REF^}
      #     done
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Add Staging Labels to Issues
        run: |
          PR_BODY='${{ github.event.pull_request.body }}'

          issues=$(echo "$PR_BODY" | grep -Eio '((close[sd]?|fix(e[sd]?|d)?|resolve[sd]?)\s+#([0-9]+))' | sed -E 's/.*#([0-9]+)/\1/')

          if [ -z "$issues" ]; then
            echo "No issues found in PR body."
            exit 0
          fi

          for issue in $issues; do
            gh issue edit $issue --add-label ${GITHUB_BASE_REF^}
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
