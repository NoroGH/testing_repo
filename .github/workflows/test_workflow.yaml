name: Docker Image

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - develop
      - staging
  workflow_dispatch:
    inputs:
      environment:
        description: 'Custom dev environments'
        type: choice
        default: "null"
        options:
        - be1
        - be2
        - fe1
        - qa1
        required: true
      deploy:
        description: 'Deploy Custom dev environments'
        default: false
        type: boolean

env:
  dockerfile: .infrastructure/docker/Dockerfile
  IMAGE_NAME: serpbook-api-k8s
  CONTAINER_REGISTRY: 436000106670.dkr.ecr.us-east-2.amazonaws.com
  test_env: api_test_env

jobs:
  Build-Push-Docker-Image-to-ECR:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set env branch name
        shell: bash
        run: echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
        id: extract_branch 

      - name: Set env release version
        run: echo "RELEASE_VERSION=${GITHUB_SHA:0:15}" >> $GITHUB_ENV

      - name: Build and Test Feature
        if: ${{ steps.extract_branch.outputs.branch != 'develop' && startsWith(github.ref, 'refs/heads') }}
        run: |-
          echo "building ${{ steps.extract_branch.outputs.branch }}"

      - name: Build and Test 
        if: ${{ steps.extract_branch.outputs.branch == 'develop' }}
        run: |-
          echo "building ${{ steps.extract_branch.outputs.branch }}"

      - name: Build and push Production 
        if: startsWith(github.ref, 'refs/tags')
        run: |-
          echo "$CONTAINER_REGISTRY/$IMAGE_NAME:$RELEASE_VERSION - tag"

      - name: Tag and Push Docker Image to ECR
        if: startsWith(github.ref, 'refs/heads')
        run: |-
          echo "$CONTAINER_REGISTRY/$IMAGE_NAME:$RELEASE_VERSION - branch"

  edit-image-tag:
    needs: Build-Push-Docker-Image-to-ECR
    if: ${{ github.event_name == 'push' || ( github.event_name == 'workflow_dispatch' && inputs.deploy == 'true' && inputs.environment != 'null' ) }}
    name: Edit Image tag in values.yaml
    runs-on: ubuntu-latest
    steps:
      - name: Clone live environments repo
        uses: actions/checkout@v3

      - name: Set env branch name
        shell: bash
        run: echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
        id: extract_branch 

      - name: Set env release version
        run: echo "RELEASE_VERSION=${GITHUB_SHA:0:15}" >> $GITHUB_ENV

      - name: Edit Image tag for custom environments 
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |-
          echo "${{ inputs.environment }}"
          #yq e -i '.keyword-helm.api.imageTag = env(RELEASE_VERSION)' ./kw-live-environments/helm-values/${{ inputs.environment }}/values.yaml;

      - name: Edit Image tag for dev
        if: ${{ steps.extract_branch.outputs.branch == 'develop' }}
        run: |-
          echo "dev"

      - name: Edit Image tag for staging 
        if: ${{ steps.extract_branch.outputs.branch == 'staging' }}
        run: |-
          echo "staging"

      - name: Edit Image tag for prod 
        if: startsWith(github.ref, 'refs/tags')
        run: |-
          echo "prod"
    